open AsmOpt

let rec f = function
| [] -> []
| (Label x) :: (J y) :: BT(a, b) :: insts when x = b -> f ((Label x) :: BF(a, y) :: insts)
| (Label x) :: (J y) :: BF(a, b) :: insts when x = b -> f ((Label x) :: BT(a, y) :: insts)
| (Label x) :: (J y) :: Beq(a, b, c) :: insts when x = c -> f ((Label x) :: Bne(a, b, y) :: insts)
| (Label x) :: (J y) :: Beqi(a, b, c) :: insts when x = c -> f ((Label x) :: Bnei(a, b, y) :: insts)
| (Label x) :: (J y) :: FBeq(a, b, c) :: insts when x = c -> f ((Label x) :: FBne(a, b, y) :: insts)
| (Label x) :: (J y) :: Bne(a, b, c) :: insts when x = c -> f ((Label x) :: Beq(a, b, y) :: insts)
| (Label x) :: (J y) :: Bnei(a, b, c) :: insts when x = c -> f ((Label x) :: Beqi(a, b, y) :: insts)
| (Label x) :: (J y) :: FBne(a, b, c) :: insts when x = c -> f ((Label x) :: FBeq(a, b, y) :: insts)
| (Label x) :: (J y) :: Blte(a, b, c) :: insts when x = c && reg_0 = b -> f ((Label x) :: Bgtei(a, 1, y) :: insts)
| (Label x) :: (J y) :: Bltei(a, -1, c) :: insts when x = c -> f ((Label x) :: Bgte(a, reg_0, y) :: insts)
| (Label x) :: (J y) :: Bltei(a, b, c) :: insts when x = c && b < 255 -> f ((Label x) :: Bgtei(a, b + 1, y) :: insts)
| (Label x) :: (J y) :: Bgte(a, b, c) :: insts when x = c && reg_0 = b -> f ((Label x) :: Bltei(a, -1, y) :: insts)
| (Label x) :: (J y) :: Bgtei(a, 1, c) :: insts when x = c -> f ((Label x) :: Blte(a, reg_0, y) :: insts)
| (Label x) :: (J y) :: Bgtei(a, b, c) :: insts when x = c && b > -1 -> f ((Label x) :: Bltei(a, b - 1, y) :: insts)
| (Label x) :: Return y :: BT(a, b) :: insts -> f ((Label x) :: (J b) :: BFr(a, y) :: insts)
| (Label x) :: Return y :: BF(a, b) :: insts -> f ((Label x) :: (J b) :: BTr(a, y) :: insts)
| (Label x) :: Return y :: Beq(a, b, c) :: insts -> f ((Label x) :: (J c) :: Bner(a, b, y) :: insts)
| (Label x) :: Return y :: Beqi(a, b, c) :: insts -> f ((Label x) :: (J c) :: Bneir(a, b, y) :: insts)
| (Label x) :: Return y :: FBeq(a, b, c) :: insts -> f ((Label x) :: (J c) :: FBner(a, b, y) :: insts)
| (Label x) :: Return y :: Bne(a, b, c) :: insts -> f ((Label x) :: (J c) :: Beqr(a, b, y) :: insts)
| (Label x) :: Return y :: Bnei(a, b, c) :: insts -> f ((Label x) :: (J c) :: Beqir(a, b, y) :: insts)
| (Label x) :: Return y :: FBne(a, b, c) :: insts -> f ((Label x) :: (J c) :: FBeqr(a, b, y) :: insts)
| (Label x) :: Return y :: Blte(a, b, c) :: insts when reg_0 = b -> f ((Label x) :: (J c) :: Bgteir(a, 1, y) :: insts)
| (Label x) :: Return y :: Blte(a, b, c) :: insts when reg_0 = a -> f ((Label x) :: (J c) :: Blteir(b, -1, y) :: insts)
| (Label x) :: Return y :: Bltei(a, -1, c) :: insts -> f ((Label x) :: (J c) :: Bgter(a, reg_0, y) :: insts)
| (Label x) :: Return y :: Bltei(a, b, c) :: insts when b < 255 -> f ((Label x) :: (J c) :: Bgteir(a, b + 1, y) :: insts)
| (Label x) :: Return y :: FBlte(a, b, c) :: insts -> f ((Label x) :: (J c) :: FBgtr(a, b, y) :: insts)
| (Label x) :: Return y :: Bgte(a, b, c) :: insts when reg_0 = b -> f ((Label x) :: (J c) :: Blteir(a, -1, y) :: insts)
| (Label x) :: Return y :: Bgte(a, b, c) :: insts when reg_0 = a -> f ((Label x) :: (J c) :: Bgteir(b, 1, y) :: insts)
| (Label x) :: Return y :: Bgtei(a, 1, c) :: insts -> f ((Label x) :: (J c) :: Blter(a, reg_0, y) :: insts)
| (Label x) :: Return y :: Bgtei(a, b, c) :: insts when b > -1 -> f ((Label x) :: (J c) :: Blteir(a, b - 1, y) :: insts)
| (Label x) :: Return y :: FBgt(a, b, c) :: insts -> f ((Label x) :: (J c) :: FBlter(a, b, y) :: insts)
| (Label x) :: ((J y) | BT(_, y) | BF(_, y) | Beq(_, _, y) | Beqi(_, _, y) | FBeq(_, _, y) | Bne(_, _, y) | Bnei(_, _, y) | FBne(_, _, y)
                | Blte(_, _, y) | Bltei(_, _, y) | FBlte(_, _, y) | Bgte(_, _, y) | Bgtei(_, _, y) | FBgt(_, _, y)) :: insts when x = y -> f ((Label x) :: insts)
| inst :: insts -> inst :: f insts

